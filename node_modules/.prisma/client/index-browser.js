
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 3.15.2
 * Query Engine version: 461d6a05159055555eb7dfb337c9fb271cbd4d7e
 */
Prisma.prismaVersion = {
  client: "3.15.2",
  engine: "461d6a05159055555eb7dfb337c9fb271cbd4d7e"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = 'DbNull'
Prisma.JsonNull = 'JsonNull'
Prisma.AnyNull = 'AnyNull'

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.Dc_citiesScalarFieldEnum = makeEnum({
  name: 'name',
  status: 'status',
  odoo_id: 'odoo_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  id: 'id',
  cityhead: 'cityhead',
  country: 'country',
  includepmfee: 'includepmfee',
  reportingmanager: 'reportingmanager',
  planningcoordinatoremail: 'planningcoordinatoremail'
});

exports.Prisma.Dc_experiencecentersScalarFieldEnum = makeEnum({
  centerid: 'centerid',
  name: 'name',
  odoo_id: 'odoo_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  ectype: 'ectype',
  address: 'address',
  city: 'city',
  centerhead: 'centerhead',
  financeteamemail: 'financeteamemail'
});

exports.Prisma.Dc_roleScalarFieldEnum = makeEnum({
  roleid: 'roleid',
  role_name: 'role_name',
  status: 'status',
  created_date: 'created_date',
  updated_at: 'updated_at'
});

exports.Prisma.Dc_departmentScalarFieldEnum = makeEnum({
  departmentid: 'departmentid',
  name: 'name',
  status: 'status',
  created_date: 'created_date',
  updated_at: 'updated_at'
});

exports.Prisma.Dc_teamsScalarFieldEnum = makeEnum({
  name: 'name',
  teammailid: 'teammailid',
  reportingmanager: 'reportingmanager',
  teamlead: 'teamlead',
  department: 'department',
  odoo_id: 'odoo_id',
  create_at: 'create_at',
  updated_at: 'updated_at',
  isactive: 'isactive',
  id: 'id',
  teamsdepartment: 'teamsdepartment'
});

exports.Prisma.Dc_profileScalarFieldEnum = makeEnum({
  profileid: 'profileid',
  profile_name: 'profile_name',
  status: 'status',
  created_date: 'created_date',
  updated_at: 'updated_at',
  permissions: 'permissions',
  access_level: 'access_level'
});

exports.Prisma.Dc_teams_cityScalarFieldEnum = makeEnum({
  id: 'id',
  teamid: 'teamid',
  cityid: 'cityid',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.Dc_teams_experiencecentersScalarFieldEnum = makeEnum({
  id: 'id',
  teamid: 'teamid',
  centerid: 'centerid',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.Dc_login_historyScalarFieldEnum = makeEnum({
  id: 'id',
  entity_id: 'entity_id',
  login_time: 'login_time',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.Dc_usersScalarFieldEnum = makeEnum({
  userid: 'userid',
  roleid: 'roleid',
  empid: 'empid',
  departmentid: 'departmentid',
  salesforceimported: 'salesforceimported',
  firstname: 'firstname',
  lastname: 'lastname',
  middlename: 'middlename',
  username: 'username',
  phonenumber: 'phonenumber',
  designcafeemail: 'designcafeemail',
  reportingmanager: 'reportingmanager',
  salesforceuserid: 'salesforceuserid',
  isbetauser: 'isbetauser',
  profilepic: 'profilepic',
  lastlogindate: 'lastlogindate',
  created_at: 'created_at',
  updated_at: 'updated_at',
  logintoken: 'logintoken',
  profileid: 'profileid',
  refreshtoken: 'refreshtoken',
  iseligibleforleadmeetings: 'iseligibleforleadmeetings',
  supportpaloperatorid: 'supportpaloperatorid',
  monthlytarget: 'monthlytarget'
});

exports.Prisma.Dc_users_cityScalarFieldEnum = makeEnum({
  id: 'id',
  userid: 'userid',
  cityid: 'cityid',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.Dc_users_experiencecentersScalarFieldEnum = makeEnum({
  id: 'id',
  userid: 'userid',
  centerid: 'centerid',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.Dc_users_teamScalarFieldEnum = makeEnum({
  id: 'id',
  userid: 'userid',
  teamid: 'teamid',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.Dc_addressesScalarFieldEnum = makeEnum({
  addressid: 'addressid',
  city: 'city',
  country: 'country',
  street: 'street',
  zip: 'zip',
  state: 'state',
  addresstype: 'addresstype',
  customerid: 'customerid',
  projectid: 'projectid'
});

exports.Prisma.Dc_customerScalarFieldEnum = makeEnum({
  customerid: 'customerid',
  otp: 'otp',
  isotpused: 'isotpused',
  firstname: 'firstname',
  lastname: 'lastname',
  customeremail: 'customeremail',
  customerphone: 'customerphone',
  salesforceid: 'salesforceid',
  pancardno: 'pancardno',
  gstno: 'gstno',
  odoocontactid: 'odoocontactid',
  generatedotptimestamp: 'generatedotptimestamp',
  requirementform: 'requirementform',
  requirementformuploaded: 'requirementformuploaded',
  leadid: 'leadid',
  lastlogindate: 'lastlogindate',
  logintoken: 'logintoken',
  refreshtoken: 'refreshtoken',
  issalesforcemigrateddata: 'issalesforcemigrateddata',
  issalesforceupdatedobj: 'issalesforceupdatedobj',
  supportpaloperatorid: 'supportpaloperatorid',
  currentaddress: 'currentaddress',
  opportunityid: 'opportunityid',
  projectaddress: 'projectaddress',
  bookingformpdf: 'bookingformpdf',
  bookingformaccepted: 'bookingformaccepted',
  bookingformaccepteddate: 'bookingformaccepteddate',
  bookingformstatus: 'bookingformstatus',
  cardstage: 'cardstage',
  customertype: 'customertype',
  i10ingsttreatment: 'i10ingsttreatment',
  dsacategory: 'dsacategory',
  region: 'region'
});

exports.Prisma.HcmetaScalarFieldEnum = makeEnum({
  id: 'id',
  hcver: 'hcver',
  org_id: 'org_id',
  details: 'details'
});

exports.Prisma.Sf_event_logScalarFieldEnum = makeEnum({
  id: 'id',
  table_name: 'table_name',
  action: 'action',
  synced_at: 'synced_at',
  sf_timestamp: 'sf_timestamp',
  sfid: 'sfid',
  record: 'record',
  processed: 'processed'
});

exports.Prisma.Trigger_logScalarFieldEnum = makeEnum({
  id: 'id',
  txid: 'txid',
  created_at: 'created_at',
  updated_at: 'updated_at',
  processed_at: 'processed_at',
  processed_tx: 'processed_tx',
  state: 'state',
  action: 'action',
  table_name: 'table_name',
  record_id: 'record_id',
  sfid: 'sfid',
  old: 'old',
  values: 'values',
  sf_result: 'sf_result',
  sf_message: 'sf_message'
});

exports.Prisma.Trigger_log_archiveScalarFieldEnum = makeEnum({
  id: 'id',
  txid: 'txid',
  created_at: 'created_at',
  updated_at: 'updated_at',
  processed_at: 'processed_at',
  processed_tx: 'processed_tx',
  state: 'state',
  action: 'action',
  table_name: 'table_name',
  record_id: 'record_id',
  sfid: 'sfid',
  old: 'old',
  values: 'values',
  sf_result: 'sf_result',
  sf_message: 'sf_message'
});

exports.Prisma.AccountScalarFieldEnum = makeEnum({
  personmailingcountry: 'personmailingcountry',
  middlename: 'middlename',
  personmailingcity: 'personmailingcity',
  lastname: 'lastname',
  personmailinglatitude: 'personmailinglatitude',
  acc_email__c: 'acc_email__c',
  whatsapp_opt_in__c: 'whatsapp_opt_in__c',
  personcontactid: 'personcontactid',
  billingcity: 'billingcity',
  shippingcity: 'shippingcity',
  pan__c: 'pan__c',
  persondepartment: 'persondepartment',
  personemail: 'personemail',
  billingcountrycode: 'billingcountrycode',
  shippingcountrycode: 'shippingcountrycode',
  aadhar_card__c: 'aadhar_card__c',
  gst_no__c: 'gst_no__c',
  name: 'name',
  channel_marketing_manager__c: 'channel_marketing_manager__c',
  channelprogramname: 'channelprogramname',
  country_code__c: 'country_code__c',
  approvalstatus__c: 'approvalstatus__c',
  channelprogramlevelname: 'channelprogramlevelname',
  personmailingpostalcode: 'personmailingpostalcode',
  isdeleted: 'isdeleted',
  systemmodstamp: 'systemmodstamp',
  opportunity_stage__c: 'opportunity_stage__c',
  dsa__c: 'dsa__c',
  referee_code_dc__c: 'referee_code_dc__c',
  alternate_contact_number__c: 'alternate_contact_number__c',
  createddate: 'createddate',
  billingstate: 'billingstate',
  shippingstate: 'shippingstate',
  accountnumber: 'accountnumber',
  personmobilephone: 'personmobilephone',
  dsa_category__c: 'dsa_category__c',
  commission__c: 'commission__c',
  personmailingstreet: 'personmailingstreet',
  personmailingstate: 'personmailingstate',
  billingcountry: 'billingcountry',
  shippingcountry: 'shippingcountry',
  firstname: 'firstname',
  gst__c: 'gst__c',
  description: 'description',
  annualrevenue: 'annualrevenue',
  billingpostalcode: 'billingpostalcode',
  shippingpostalcode: 'shippingpostalcode',
  industry: 'industry',
  billingstreet: 'billingstreet',
  shippingstreet: 'shippingstreet',
  sfid: 'sfid',
  id: 'id',
  hc_lastop: 'hc_lastop',
  hc_err: 'hc_err'
});

exports.Prisma.RenamedcaseScalarFieldEnum = makeEnum({
  chm_name__c: 'chm_name__c',
  contactmobile: 'contactmobile',
  knowlarity_cti__lead__r__mobile_number_external_field__c: 'knowlarity_cti__lead__r__mobile_number_external_field__c',
  designer_name__c: 'designer_name__c',
  priority: 'priority',
  reason: 'reason',
  origin: 'origin',
  accountid: 'accountid',
  suppliedname: 'suppliedname',
  businesshoursid: 'businesshoursid',
  project__c: 'project__c',
  assetid: 'assetid',
  subject: 'subject',
  contactphone: 'contactphone',
  masterrecordid: 'masterrecordid',
  isdeleted: 'isdeleted',
  systemmodstamp: 'systemmodstamp',
  suppliedphone: 'suppliedphone',
  isclosedoncreate: 'isclosedoncreate',
  status: 'status',
  knowlarity_cti__lead__c: 'knowlarity_cti__lead__c',
  comments: 'comments',
  createddate: 'createddate',
  isclosed: 'isclosed',
  language: 'language',
  casenumber: 'casenumber',
  type: 'type',
  closeddate: 'closeddate',
  contactid: 'contactid',
  knowlarity_cti__complaint_category__c: 'knowlarity_cti__complaint_category__c',
  contactemail: 'contactemail',
  description: 'description',
  contactfax: 'contactfax',
  suppliedemail: 'suppliedemail',
  chm_email__c: 'chm_email__c',
  suppliedcompany: 'suppliedcompany',
  sfid: 'sfid',
  id: 'id',
  hc_lastop: 'hc_lastop',
  hc_err: 'hc_err'
});

exports.Prisma.CasecommentScalarFieldEnum = makeEnum({
  createddate: 'createddate',
  isdeleted: 'isdeleted',
  systemmodstamp: 'systemmodstamp',
  commentbody: 'commentbody',
  parentid: 'parentid',
  sfid: 'sfid',
  id: 'id',
  hc_lastop: 'hc_lastop',
  hc_err: 'hc_err'
});

exports.Prisma.Commission__cScalarFieldEnum = makeEnum({
  dsaname__c: 'dsaname__c',
  tdsless__c: 'tdsless__c',
  name: 'name',
  isdeleted: 'isdeleted',
  payment_at_5_milestone__c: 'payment_at_5_milestone__c',
  opportunity__c: 'opportunity__c',
  systemmodstamp: 'systemmodstamp',
  project_name__c: 'project_name__c',
  createddate: 'createddate',
  commission__c: 'commission__c',
  dsaemail__c: 'dsaemail__c',
  customername__c: 'customername__c',
  gst__c: 'gst__c',
  payment_at_35_milestone__c: 'payment_at_35_milestone__c',
  sfid: 'sfid',
  id: 'id',
  hc_lastop: 'hc_lastop',
  hc_err: 'hc_err'
});

exports.Prisma.ContactScalarFieldEnum = makeEnum({
  middlename: 'middlename',
  lastname: 'lastname',
  mailingpostalcode: 'mailingpostalcode',
  mailinglongitude: 'mailinglongitude',
  mailingstate: 'mailingstate',
  accountid: 'accountid',
  mailingcountry: 'mailingcountry',
  name: 'name',
  mailinggeocodeaccuracy: 'mailinggeocodeaccuracy',
  mobilephone: 'mobilephone',
  mailingstreet: 'mailingstreet',
  isdeleted: 'isdeleted',
  systemmodstamp: 'systemmodstamp',
  mailingstatecode: 'mailingstatecode',
  createddate: 'createddate',
  mailingcity: 'mailingcity',
  mailinglatitude: 'mailinglatitude',
  email: 'email',
  sfid: 'sfid',
  id: 'id',
  hc_lastop: 'hc_lastop',
  hc_err: 'hc_err',
  mailingcountrycode: 'mailingcountrycode'
});

exports.Prisma.ContentversionScalarFieldEnum = makeEnum({
  createddate: 'createddate',
  isdeleted: 'isdeleted',
  systemmodstamp: 'systemmodstamp',
  contentdocumentid: 'contentdocumentid',
  title: 'title',
  versiondata: 'versiondata',
  sfid: 'sfid',
  id: 'id',
  hc_lastop: 'hc_lastop',
  hc_err: 'hc_err'
});

exports.Prisma.Design_user__cScalarFieldEnum = makeEnum({
  mobile__c: 'mobile__c',
  email__c: 'email__c',
  designer_dashboard_id__c: 'designer_dashboard_id__c',
  name: 'name',
  salutation__c: 'salutation__c',
  role__c: 'role__c',
  region__c: 'region__c',
  isdeleted: 'isdeleted',
  systemmodstamp: 'systemmodstamp',
  designusernumber__c: 'designusernumber__c',
  designer_team__c: 'designer_team__c',
  createddate: 'createddate',
  experience_center__c: 'experience_center__c',
  active__c: 'active__c',
  sfid: 'sfid',
  id: 'id',
  hc_lastop: 'hc_lastop',
  hc_err: 'hc_err'
});

exports.Prisma.FeedcommentScalarFieldEnum = makeEnum({
  commentbody: 'commentbody',
  parentid: 'parentid',
  threadchildrencount: 'threadchildrencount',
  threadlastupdateddate: 'threadlastupdateddate',
  feeditemid: 'feeditemid',
  isdeleted: 'isdeleted',
  threadparentid: 'threadparentid',
  systemmodstamp: 'systemmodstamp',
  status: 'status',
  isrichtext: 'isrichtext',
  createddate: 'createddate',
  relatedrecordid: 'relatedrecordid',
  commenttype: 'commenttype',
  threadlevel: 'threadlevel',
  revision: 'revision',
  sfid: 'sfid',
  id: 'id',
  hc_lastop: 'hc_lastop',
  hc_err: 'hc_err'
});

exports.Prisma.Invoice__cScalarFieldEnum = makeEnum({
  invoice_date__c: 'invoice_date__c',
  designer_name__c: 'designer_name__c',
  invoicepdflink__c: 'invoicepdflink__c',
  customer__c: 'customer__c',
  invoice_number__c: 'invoice_number__c',
  customerid__c: 'customerid__c',
  due_date__c: 'due_date__c',
  project__c: 'project__c',
  amount__c: 'amount__c',
  is_attachment__c: 'is_attachment__c',
  name: 'name',
  sgst__c: 'sgst__c',
  isdeleted: 'isdeleted',
  payment_link__c: 'payment_link__c',
  opportunity__c: 'opportunity__c',
  systemmodstamp: 'systemmodstamp',
  total_amount__c: 'total_amount__c',
  invoicepdflink1__c: 'invoicepdflink1__c',
  project_name__c: 'project_name__c',
  milestone__c: 'milestone__c',
  virtual_id__c: 'virtual_id__c',
  shipping_charges__c: 'shipping_charges__c',
  createddate: 'createddate',
  account__c: 'account__c',
  tax_amount__c: 'tax_amount__c',
  amount_s__c: 'amount_s__c',
  designer_email__c: 'designer_email__c',
  friendly_payment_link__c: 'friendly_payment_link__c',
  terms__c: 'terms__c',
  total_tax_amount__c: 'total_tax_amount__c',
  igst18__c: 'igst18__c',
  base_amount__c: 'base_amount__c',
  cgst__c: 'cgst__c',
  payment_name__c: 'payment_name__c',
  sfid: 'sfid',
  id: 'id',
  hc_lastop: 'hc_lastop',
  hc_err: 'hc_err'
});

exports.Prisma.Invoice_payment__cScalarFieldEnum = makeEnum({
  payment_confirmation_status__c: 'payment_confirmation_status__c',
  request_payment_modular__c: 'request_payment_modular__c',
  paymentid__c: 'paymentid__c',
  invoice_1__c: 'invoice_1__c',
  invoice_name__c: 'invoice_name__c',
  rp_recipt_id__c: 'rp_recipt_id__c',
  modular_value__c: 'modular_value__c',
  name: 'name',
  opportunity_name__c: 'opportunity_name__c',
  isdeleted: 'isdeleted',
  systemmodstamp: 'systemmodstamp',
  payment_receipt_url__c: 'payment_receipt_url__c',
  date_of_payment__c: 'date_of_payment__c',
  site_service_value__c: 'site_service_value__c',
  createddate: 'createddate',
  mode_of_receipt__c: 'mode_of_receipt__c',
  mserv_invoice_numer__c: 'mserv_invoice_numer__c',
  request_payment_siteservice__c: 'request_payment_siteservice__c',
  sfid: 'sfid',
  id: 'id',
  hc_lastop: 'hc_lastop',
  hc_err: 'hc_err'
});

exports.Prisma.LeadScalarFieldEnum = makeEnum({
  partneraccountid: 'partneraccountid',
  age_of_second_kid__c: 'age_of_second_kid__c',
  middlename: 'middlename',
  lastname: 'lastname',
  if_other_languages_please_specify__c: 'if_other_languages_please_specify__c',
  countrycode: 'countrycode',
  designer_name__c: 'designer_name__c',
  propertyaddress__c: 'propertyaddress__c',
  meeting_type__c: 'meeting_type__c',
  who_will_be_staying_in_the_house__c: 'who_will_be_staying_in_the_house__c',
  interior_work_needed_for__c: 'interior_work_needed_for__c',
  dc_lead_source__c: 'dc_lead_source__c',
  design_user_name__c: 'design_user_name__c',
  others_for_live__c: 'others_for_live__c',
  civil_work__c: 'civil_work__c',
  call_stage__c: 'call_stage__c',
  how_many_kids_do_you_have__c: 'how_many_kids_do_you_have__c',
  convertedcontactid: 'convertedcontactid',
  which_language_are_you_most_comfortable__c: 'which_language_are_you_most_comfortable__c',
  dsa_code__c: 'dsa_code__c',
  when_would_you_like_to_have_the_home__c: 'when_would_you_like_to_have_the_home__c',
  designer_team_name__c: 'designer_team_name__c',
  rejected_by__c: 'rejected_by__c',
  eat__c: 'eat__c',
  name: 'name',
  mobilephone: 'mobilephone',
  do_you_have_pets__c: 'do_you_have_pets__c',
  property_usage__c: 'property_usage__c',
  has_designer_accepted__c: 'has_designer_accepted__c',
  where_are_you_currently_located__c: 'where_are_you_currently_located__c',
  phone: 'phone',
  dc_lead_status__c: 'dc_lead_status__c',
  play__c: 'play__c',
  region__c: 'region__c',
  isdeleted: 'isdeleted',
  systemmodstamp: 'systemmodstamp',
  dsa__c: 'dsa__c',
  status: 'status',
  work__c: 'work__c',
  broadcast_status__c: 'broadcast_status__c',
  age_of_first_kid__c: 'age_of_first_kid__c',
  dsa_email__c: 'dsa_email__c',
  scope_of_work__c: 'scope_of_work__c',
  willingness_for_meeting__c: 'willingness_for_meeting__c',
  gender_of_first_kid__c: 'gender_of_first_kid__c',
  area__c: 'area__c',
  alternate_contact_number__c: 'alternate_contact_number__c',
  createddate: 'createddate',
  convertedaccountid: 'convertedaccountid',
  country: 'country',
  design_user__c: 'design_user__c',
  live__c: 'live__c',
  meeting_venue__c: 'meeting_venue__c',
  designer__c: 'designer__c',
  gender_of_fourth_kid__c: 'gender_of_fourth_kid__c',
  dc_home_visit__c: 'dc_home_visit__c',
  dsa_category__c: 'dsa_category__c',
  property_address__c: 'property_address__c',
  approx_budget__c: 'approx_budget__c',
  dc_campaign_source__c: 'dc_campaign_source__c',
  age_of_fourth_kid__c: 'age_of_fourth_kid__c',
  firstname: 'firstname',
  estimate__c: 'estimate__c',
  partner__c: 'partner__c',
  cmm_name__c: 'cmm_name__c',
  convertedopportunityid: 'convertedopportunityid',
  email: 'email',
  description: 'description',
  agent_code__c: 'agent_code__c',
  company: 'company',
  others_for_play__c: 'others_for_play__c',
  requirement_details__c: 'requirement_details__c',
  annualrevenue: 'annualrevenue',
  age_of_third_kid__c: 'age_of_third_kid__c',
  agency__c: 'agency__c',
  gender_of_second_kid__c: 'gender_of_second_kid__c',
  gender_of_third_kid__c: 'gender_of_third_kid__c',
  property_type__c: 'property_type__c',
  sfid: 'sfid',
  id: 'id',
  hc_lastop: 'hc_lastop',
  hc_err: 'hc_err',
  lead_owner_name__c: 'lead_owner_name__c',
  client_s_budget__c: 'client_s_budget__c',
  mobile_number_external_field__c: 'mobile_number_external_field__c',
  country_code__c: 'country_code__c',
  home_type__c: 'home_type__c',
  site_service_needed_for__c: 'site_service_needed_for__c',
  floor_plan_attachment_id__c: 'floor_plan_attachment_id__c',
  ownerid: 'ownerid',
  lead_owner_mobile__c: 'lead_owner_mobile__c',
  lead_owner_email__c: 'lead_owner_email__c'
});

exports.Prisma.Milestone1_milestone__cScalarFieldEnum = makeEnum({
  is_accepted_by_customer__c: 'is_accepted_by_customer__c',
  mom_accepted_by_customer__c: 'mom_accepted_by_customer__c',
  milestone_template_predecessorsfid__c: 'milestone_template_predecessorsfid__c',
  importid__c: 'importid__c',
  actual_completion_date__c: 'actual_completion_date__c',
  actual_expense_from_sub_milestones__c: 'actual_expense_from_sub_milestones__c',
  customer_contact__c: 'customer_contact__c',
  milestone_template_successorsfid__c: 'milestone_template_successorsfid__c',
  late_tasks_in_tasks__c: 'late_tasks_in_tasks__c',
  customer__c: 'customer__c',
  relative_deadline_in_days__c: 'relative_deadline_in_days__c',
  milestone_template_prev_payment_sfid__c: 'milestone_template_prev_payment_sfid__c',
  kyc_meeting_date__c: 'kyc_meeting_date__c',
  description__c: 'description__c',
  parent_milestone__c: 'parent_milestone__c',
  predecessor_milestone__c: 'predecessor_milestone__c',
  type__c: 'type__c',
  complete__c: 'complete__c',
  project__c: 'project__c',
  dsa_name__c: 'dsa_name__c',
  collectable_amount_percent_before_this__c: 'collectable_amount_percent_before_this__c',
  milestonetemplatesfid__c: 'milestonetemplatesfid__c',
  blocked_tasks_in_sub_milestones__c: 'blocked_tasks_in_sub_milestones__c',
  name: 'name',
  deadline__c: 'deadline__c',
  successor_milestone__c: 'successor_milestone__c',
  open_tasks_in_sub_milestones__c: 'open_tasks_in_sub_milestones__c',
  okay_to_reparent__c: 'okay_to_reparent__c',
  actual_hours_from_sub_milestones__c: 'actual_hours_from_sub_milestones__c',
  milestone_level__c: 'milestone_level__c',
  hours_budget__c: 'hours_budget__c',
  isdeleted: 'isdeleted',
  systemmodstamp: 'systemmodstamp',
  late_tasks_in_sub_milestones__c: 'late_tasks_in_sub_milestones__c',
  status__c: 'status__c',
  alias__c: 'alias__c',
  predecessor_milestone_import_id__c: 'predecessor_milestone_import_id__c',
  customer_s_email__c: 'customer_s_email__c',
  previous_payment_milestone__c: 'previous_payment_milestone__c',
  dsa_email__c: 'dsa_email__c',
  order__c: 'order__c',
  hours_budget_from_sub_milestones__c: 'hours_budget_from_sub_milestones__c',
  packages__c: 'packages__c',
  createddate: 'createddate',
  emt_cmm_email__c: 'emt_cmm_email__c',
  estimated_expense_from_sub_milestones__c: 'estimated_expense_from_sub_milestones__c',
  expense_budget__c: 'expense_budget__c',
  assign_to__c: 'assign_to__c',
  designer__c: 'designer__c',
  mom__c: 'mom__c',
  assign_to_role__c: 'assign_to_role__c',
  relative_kickoff_date_in_days__c: 'relative_kickoff_date_in_days__c',
  kickoff__c: 'kickoff__c',
  eligibleamountpercentage__c: 'eligibleamountpercentage__c',
  cmm_name__c: 'cmm_name__c',
  expense_budget_from_sub_milestones__c: 'expense_budget_from_sub_milestones__c',
  estimated_hours_from_sub_milestones__c: 'estimated_hours_from_sub_milestones__c',
  sfid: 'sfid',
  id: 'id',
  hc_lastop: 'hc_lastop',
  hc_err: 'hc_err'
});

exports.Prisma.Milestone1_project__cScalarFieldEnum = makeEnum({
  survey_executive__c: 'survey_executive__c',
  cmm__c: 'cmm__c',
  strict_project__c: 'strict_project__c',
  total_blocked_task_count__c: 'total_blocked_task_count__c',
  handover__c: 'handover__c',
  offers_and_discounts__c: 'offers_and_discounts__c',
  projecttemplatesfid__c: 'projecttemplatesfid__c',
  x3d_team_manager__c: 'x3d_team_manager__c',
  kyc_completed__c: 'kyc_completed__c',
  project_accepted_by_designer__c: 'project_accepted_by_designer__c',
  total_hours_incurred__c: 'total_hours_incurred__c',
  total_expense_budget_from_milestones__c: 'total_expense_budget_from_milestones__c',
  importid__c: 'importid__c',
  total_complete_task_count__c: 'total_complete_task_count__c',
  actual_completion_date__c: 'actual_completion_date__c',
  project_type__c: 'project_type__c',
  on__c: 'on__c',
  signup_amount__c: 'signup_amount__c',
  design_finalization_date__c: 'design_finalization_date__c',
  customer__c: 'customer__c',
  x3d_shell_designer_assigned__c: 'x3d_shell_designer_assigned__c',
  x3d_presentation_date__c: 'x3d_presentation_date__c',
  number_of_incomplete_top_milestones__c: 'number_of_incomplete_top_milestones__c',
  description__c: 'description__c',
  production_started__c: 'production_started__c',
  quip_document_template_url__c: 'quip_document_template_url__c',
  next_project_milestone_due_date__c: 'next_project_milestone_due_date__c',
  pc_assigned__c: 'pc_assigned__c',
  project_group__c: 'project_group__c',
  is_bulk_upload__c: 'is_bulk_upload__c',
  reason_for_rejection__c: 'reason_for_rejection__c',
  kyc_date__c: 'kyc_date__c',
  amount__c: 'amount__c',
  total_expense_incurred__c: 'total_expense_incurred__c',
  name: 'name',
  deadline__c: 'deadline__c',
  survey_status__c: 'survey_status__c',
  number_of_complete_milestones__c: 'number_of_complete_milestones__c',
  enquiry_id__c: 'enquiry_id__c',
  ownerid: 'ownerid',
  chm_team__c: 'chm_team__c',
  region__c: 'region__c',
  production_started_change__c: 'production_started_change__c',
  isdeleted: 'isdeleted',
  total_hours_estimate__c: 'total_hours_estimate__c',
  opportunity__c: 'opportunity__c',
  systemmodstamp: 'systemmodstamp',
  total_late_task_count__c: 'total_late_task_count__c',
  customer_s_contact__c: 'customer_s_contact__c',
  completed_on__c: 'completed_on__c',
  default_template_project__c: 'default_template_project__c',
  number_of_incomplete_milestones__c: 'number_of_incomplete_milestones__c',
  pb_commission_name__c: 'pb_commission_name__c',
  status__c: 'status__c',
  updated_num_temp__c: 'updated_num_temp__c',
  designer_team__c: 'designer_team__c',
  total_hours_budget__c: 'total_hours_budget__c',
  virtual_account_number__c: 'virtual_account_number__c',
  customer_s_email__c: 'customer_s_email__c',
  total_open_task_count__c: 'total_open_task_count__c',
  project_number__c: 'project_number__c',
  is_qc_approved__c: 'is_qc_approved__c',
  planning_coordinator__c: 'planning_coordinator__c',
  googlegannturl__c: 'googlegannturl__c',
  project_address__c: 'project_address__c',
  is_migrated__c: 'is_migrated__c',
  is_project_good_for_construction__c: 'is_project_good_for_construction__c',
  packages__c: 'packages__c',
  is_designer_assigned__c: 'is_designer_assigned__c',
  createddate: 'createddate',
  gfc_status__c: 'gfc_status__c',
  project_duration_in_days__c: 'project_duration_in_days__c',
  x3d_designer_assigned__c: 'x3d_designer_assigned__c',
  design_team_name__c: 'design_team_name__c',
  handover_change__c: 'handover_change__c',
  designer__c: 'designer__c',
  current_milestone__c: 'current_milestone__c',
  total_expense_estimate__c: 'total_expense_estimate__c',
  quality_check_status__c: 'quality_check_status__c',
  total_hours_budget_from_milestones__c: 'total_hours_budget_from_milestones__c',
  kickoff__c: 'kickoff__c',
  current_milestone_stage__c: 'current_milestone_stage__c',
  kickoff_meeting_date__c: 'kickoff_meeting_date__c',
  chm__c: 'chm__c',
  project_milestone_status__c: 'project_milestone_status__c',
  first_cut_presentation_date__c: 'first_cut_presentation_date__c',
  project_manager__c: 'project_manager__c',
  total_expense_budget__c: 'total_expense_budget__c',
  x3d_team_member__c: 'x3d_team_member__c',
  survey_completed__c: 'survey_completed__c',
  project_manager_assigned__c: 'project_manager_assigned__c',
  chm_assigned__c: 'chm_assigned__c',
  payment_stage__c: 'payment_stage__c',
  next_project_top_milestone_due_date__c: 'next_project_top_milestone_due_date__c',
  sfid: 'sfid',
  id: 'id',
  hc_lastop: 'hc_lastop',
  hc_err: 'hc_err'
});

exports.Prisma.OpportunityScalarFieldEnum = makeEnum({
  frames_for_all_external_doors_windows__c: 'frames_for_all_external_doors_windows__c',
  mobile__c: 'mobile__c',
  notes__c: 'notes__c',
  wohoo_card__c: 'wohoo_card__c',
  expectedrevenue: 'expectedrevenue',
  flooring_is_completed_required__c: 'flooring_is_completed_required__c',
  signup_amount__c: 'signup_amount__c',
  meeting_type__c: 'meeting_type__c',
  opportunity_status__c: 'opportunity_status__c',
  interior_work_needed_for__c: 'interior_work_needed_for__c',
  proposed_budget__c: 'proposed_budget__c',
  design_user_name__c: 'design_user_name__c',
  lead_id__c: 'lead_id__c',
  team__c: 'team__c',
  closedate: 'closedate',
  customer_id__c: 'customer_id__c',
  payment_mode__c: 'payment_mode__c',
  email__c: 'email__c',
  accountid: 'accountid',
  modular_amount_dis_incl_gst__c: 'modular_amount_dis_incl_gst__c',
  dsa_code__c: 'dsa_code__c',
  stagename: 'stagename',
  home_type__c: 'home_type__c',
  source_customer_id__c: 'source_customer_id__c',
  name: 'name',
  iswon: 'iswon',
  modular_discount__c: 'modular_discount__c',
  ownerid: 'ownerid',
  region__c: 'region__c',
  is_pm_site__c: 'is_pm_site__c',
  isdeleted: 'isdeleted',
  systemmodstamp: 'systemmodstamp',
  all_walls_are_completed_required__c: 'all_walls_are_completed_required__c',
  dsa__c: 'dsa__c',
  index__c: 'index__c',
  project_name__c: 'project_name__c',
  designeremail__c: 'designeremail__c',
  scope_of_work__c: 'scope_of_work__c',
  phone__c: 'phone__c',
  createddate: 'createddate',
  civil_discount__c: 'civil_discount__c',
  isclosed: 'isclosed',
  design_user__c: 'design_user__c',
  amount: 'amount',
  salesmanagername__c: 'salesmanagername__c',
  initial_payment__c: 'initial_payment__c',
  if_the_required_part_is_checked_the_co__c: 'if_the_required_part_is_checked_the_co__c',
  meeting_venue__c: 'meeting_venue__c',
  designer__c: 'designer__c',
  floors_are_levelled_out_prepped_basic__c: 'floors_are_levelled_out_prepped_basic__c',
  property_address__c: 'property_address__c',
  approx_budget__c: 'approx_budget__c',
  isnewpaymentproject__c: 'isnewpaymentproject__c',
  proposal_sent_date__c: 'proposal_sent_date__c',
  contactid: 'contactid',
  partner__c: 'partner__c',
  offer_and_discounts__c: 'offer_and_discounts__c',
  cmm_name__c: 'cmm_name__c',
  description: 'description',
  putty_and_1_coat_of_plastering_required__c: 'putty_and_1_coat_of_plastering_required__c',
  requirement_details__c: 'requirement_details__c',
  site_services_amount_dis_incl_gst__c: 'site_services_amount_dis_incl_gst__c',
  client_s_budget__c: 'client_s_budget__c',
  decor_amount_incl_gst__c: 'decor_amount_incl_gst__c',
  is_quote_created__c: 'is_quote_created__c',
  update_booking_form__c: 'update_booking_form__c',
  civil_work__c: 'civil_work__c',
  the_doors_windows_are_installed_requir__c: 'the_doors_windows_are_installed_requir__c',
  remarks_for_marketing__c: 'remarks_for_marketing__c',
  sfid: 'sfid',
  id: 'id',
  hc_lastop: 'hc_lastop',
  hc_err: 'hc_err',
  studio_name__c: 'studio_name__c'
});

exports.Prisma.Opportunity_invoice__cScalarFieldEnum = makeEnum({
  initial_amount_incl_gst__c: 'initial_amount_incl_gst__c',
  total_tax_value__c: 'total_tax_value__c',
  invoice_date__c: 'invoice_date__c',
  igst__c: 'igst__c',
  rp_invoice_number__c: 'rp_invoice_number__c',
  customer_email__c: 'customer_email__c',
  invoice_pdf_link__c: 'invoice_pdf_link__c',
  name: 'name',
  isdeleted: 'isdeleted',
  payment_link__c: 'payment_link__c',
  opportunity__c: 'opportunity__c',
  systemmodstamp: 'systemmodstamp',
  createddate: 'createddate',
  amount_excl_gst__c: 'amount_excl_gst__c',
  cgst__c: 'cgst__c',
  rp_invoice_receipt__c: 'rp_invoice_receipt__c',
  payment_name__c: 'payment_name__c',
  sfid: 'sfid',
  id: 'id',
  hc_lastop: 'hc_lastop',
  hc_err: 'hc_err'
});

exports.Prisma.Payment__cScalarFieldEnum = makeEnum({
  mode__c: 'mode__c',
  paymentid__c: 'paymentid__c',
  payment_receipt__c: 'payment_receipt__c',
  customer__c: 'customer__c',
  transactionid__c: 'transactionid__c',
  amount__c: 'amount__c',
  invoicename__c: 'invoicename__c',
  name: 'name',
  paymentreceiveddate__c: 'paymentreceiveddate__c',
  isdeleted: 'isdeleted',
  systemmodstamp: 'systemmodstamp',
  payment_received_date__c: 'payment_received_date__c',
  milestone__c: 'milestone__c',
  revenue_milestone_category__c: 'revenue_milestone_category__c',
  invoice__c: 'invoice__c',
  createddate: 'createddate',
  payment_date__c: 'payment_date__c',
  amountpaid__c: 'amountpaid__c',
  sfid: 'sfid',
  id: 'id',
  hc_lastop: 'hc_lastop',
  hc_err: 'hc_err'
});

exports.Prisma.QuoteScalarFieldEnum = makeEnum({
  quotetogeocodeaccuracy: 'quotetogeocodeaccuracy',
  discount: 'discount',
  shippinglongitude: 'shippinglongitude',
  quotetocity: 'quotetocity',
  modular_fixed_discount__c: 'modular_fixed_discount__c',
  quotetoname: 'quotetoname',
  site_services_amount__c: 'site_services_amount__c',
  billingstatecode: 'billingstatecode',
  shippingstate: 'shippingstate',
  quotetolatitude: 'quotetolatitude',
  igst__c: 'igst__c',
  subtotal: 'subtotal',
  totalprice: 'totalprice',
  quotenumber: 'quotenumber',
  site_services_pm_design_fee__c: 'site_services_pm_design_fee__c',
  site_services_amount_discounted__c: 'site_services_amount_discounted__c',
  shippingpostalcode: 'shippingpostalcode',
  billingcity: 'billingcity',
  quote_link__c: 'quote_link__c',
  billingname: 'billingname',
  quotetostatecode: 'quotetostatecode',
  billinglatitude: 'billinglatitude',
  accountid: 'accountid',
  additionallongitude: 'additionallongitude',
  billingcountrycode: 'billingcountrycode',
  shippingcountry: 'shippingcountry',
  customer_email__c: 'customer_email__c',
  decor_amount_gst__c: 'decor_amount_gst__c',
  shippinggeocodeaccuracy: 'shippinggeocodeaccuracy',
  modular_amount_dis_incl_gst__c: 'modular_amount_dis_incl_gst__c',
  additionalstate: 'additionalstate',
  additionalstreet: 'additionalstreet',
  name: 'name',
  tax: 'tax',
  quotetocountrycode: 'quotetocountrycode',
  modular_discount__c: 'modular_discount__c',
  contractid: 'contractid',
  modular_amount_gst__c: 'modular_amount_gst__c',
  sgst__c: 'sgst__c',
  phone: 'phone',
  oppty_designer_email_add__c: 'oppty_designer_email_add__c',
  site_services_amount_incl_gst__c: 'site_services_amount_incl_gst__c',
  opportunityid: 'opportunityid',
  decor_amount_dis_incl_gst__c: 'decor_amount_dis_incl_gst__c',
  additionalcountry: 'additionalcountry',
  quotetopostalcode: 'quotetopostalcode',
  isdeleted: 'isdeleted',
  additionalgeocodeaccuracy: 'additionalgeocodeaccuracy',
  systemmodstamp: 'systemmodstamp',
  total_amount__c: 'total_amount__c',
  shippingstatecode: 'shippingstatecode',
  modular_amount_discounted__c: 'modular_amount_discounted__c',
  decor_amount__c: 'decor_amount__c',
  modular_pm_design_fee__c: 'modular_pm_design_fee__c',
  shippingstreet: 'shippingstreet',
  status: 'status',
  additionalcity: 'additionalcity',
  additionalname: 'additionalname',
  designeremail__c: 'designeremail__c',
  shippinghandling: 'shippinghandling',
  additionallatitude: 'additionallatitude',
  billingpostalcode: 'billingpostalcode',
  billinglongitude: 'billinglongitude',
  site_service_fixed_discount__c: 'site_service_fixed_discount__c',
  decor_amount_discount__c: 'decor_amount_discount__c',
  shippingcountrycode: 'shippingcountrycode',
  decor_amount_discounted__c: 'decor_amount_discounted__c',
  modular_amount__c: 'modular_amount__c',
  createddate: 'createddate',
  billingstate: 'billingstate',
  additionalstatecode: 'additionalstatecode',
  customer_name__c: 'customer_name__c',
  quotetolongitude: 'quotetolongitude',
  grandtotal: 'grandtotal',
  shippingcity: 'shippingcity',
  shippingname: 'shippingname',
  site_services_amount_gst__c: 'site_services_amount_gst__c',
  site_services_discount__c: 'site_services_discount__c',
  shippinglatitude: 'shippinglatitude',
  site_services_pdf__c: 'site_services_pdf__c',
  quotetostate: 'quotetostate',
  quotetostreet: 'quotetostreet',
  modular_amount_incl_gst__c: 'modular_amount_incl_gst__c',
  pricebook2id: 'pricebook2id',
  billingcountry: 'billingcountry',
  contactid: 'contactid',
  oppty_owner__c: 'oppty_owner__c',
  email: 'email',
  description: 'description',
  additionalcountrycode: 'additionalcountrycode',
  billinggeocodeaccuracy: 'billinggeocodeaccuracy',
  oppty_customer_email__c: 'oppty_customer_email__c',
  base_amount__c: 'base_amount__c',
  issyncing: 'issyncing',
  fax: 'fax',
  expirationdate: 'expirationdate',
  site_services_amount_dis_incl_gst__c: 'site_services_amount_dis_incl_gst__c',
  proposal_pdf__c: 'proposal_pdf__c',
  cgst__c: 'cgst__c',
  send_notification_to_customer__c: 'send_notification_to_customer__c',
  is_imos_project__c: 'is_imos_project__c',
  billingstreet: 'billingstreet',
  additionalpostalcode: 'additionalpostalcode',
  quotetocountry: 'quotetocountry',
  latest_quote__c: 'latest_quote__c',
  opportunity_owner__c: 'opportunity_owner__c',
  opportunity_amount__c: 'opportunity_amount__c',
  decor_amount_incl_gst__c: 'decor_amount_incl_gst__c',
  total_calculated_value__c: 'total_calculated_value__c',
  dc_room_list__c: 'dc_room_list__c',
  postgres_id__c: 'postgres_id__c',
  change_request_list__c: 'change_request_list__c',
  dc_modular_xml__c: 'dc_modular_xml__c',
  dc_site_services_xml__c: 'dc_site_services_xml__c',
  sfid: 'sfid',
  id: 'id',
  hc_lastop: 'hc_lastop',
  hc_err: 'hc_err'
});

exports.Prisma.UserScalarFieldEnum = makeEnum({
  portalrole: 'portalrole',
  profileid: 'profileid',
  aboutme: 'aboutme',
  team__c: 'team__c',
  name: 'name',
  fullphotourl: 'fullphotourl',
  mobilephone: 'mobilephone',
  phone: 'phone',
  region__c: 'region__c',
  systemmodstamp: 'systemmodstamp',
  state: 'state',
  createddate: 'createddate',
  userrolename__c: 'userrolename__c',
  email: 'email',
  userroleid: 'userroleid',
  sfid: 'sfid',
  id: 'id',
  hc_lastop: 'hc_lastop',
  hc_err: 'hc_err',
  smallphotourl: 'smallphotourl',
  mediumphotourl: 'mediumphotourl'
});

exports.Prisma.Dc_requirement_formScalarFieldEnum = makeEnum({
  id: 'id',
  user: 'user',
  created_at: 'created_at',
  updated_at: 'updated_at',
  leadid: 'leadid',
  requirementformdetails: 'requirementformdetails'
});

exports.Prisma.Dc_applicationScalarFieldEnum = makeEnum({
  id: 'id',
  clientid: 'clientid',
  clientsecret: 'clientsecret',
  role: 'role',
  createdat: 'createdat',
  updatedat: 'updatedat'
});

exports.Prisma.Dc_attachmentsScalarFieldEnum = makeEnum({
  id: 'id',
  filekey: 'filekey',
  contenttype: 'contenttype',
  location: 'location',
  user: 'user',
  customer: 'customer',
  ispreorpost: 'ispreorpost',
  leadid: 'leadid',
  displayname: 'displayname',
  momid: 'momid',
  commentid: 'commentid',
  opportunityid: 'opportunityid',
  created_at: 'created_at'
});

exports.Prisma.Dc_change_requestScalarFieldEnum = makeEnum({
  id: 'id',
  projectid: 'projectid',
  request_type: 'request_type',
  description: 'description',
  stage: 'stage',
  created_at: 'created_at',
  updated_at: 'updated_at',
  quoteid: 'quoteid',
  quotesfid: 'quotesfid',
  customerid: 'customerid'
});

exports.Prisma.Dc_mom_commentsScalarFieldEnum = makeEnum({
  id: 'id',
  momid: 'momid',
  commentdetails: 'commentdetails',
  addedby: 'addedby',
  deletedby: 'deletedby',
  createdate: 'createdate',
  deleteddate: 'deleteddate',
  isshow: 'isshow',
  updatedate: 'updatedate'
});

exports.Prisma.Request_payment__cScalarFieldEnum = makeEnum({
  id: 'id',
  category__c: 'category__c',
  request_amount__c: 'request_amount__c',
  description__c: 'description__c',
  request_id__c: 'request_id__c',
  client_id__c: 'client_id__c',
  status__c: 'status__c',
  opportunity__c: 'opportunity__c'
});

exports.Prisma.Dc_odoocookieScalarFieldEnum = makeEnum({
  id: 'id',
  cookie: 'cookie'
});

exports.Prisma.Dc_paymentreceiptsScalarFieldEnum = makeEnum({
  id: 'id',
  issalesforcemigrateddata: 'issalesforcemigrateddata',
  amountpaid: 'amountpaid',
  paymentid: 'paymentid',
  paymentmode: 'paymentmode',
  paymentreceiveddate: 'paymentreceiveddate',
  transactionid: 'transactionid',
  createdat: 'createdat',
  updatedat: 'updatedat',
  paymentreceipt: 'paymentreceipt',
  invoice: 'invoice',
  projectid: 'projectid',
  xrazorpayeventid: 'xrazorpayeventid',
  paymentrequests: 'paymentrequests',
  status: 'status',
  modularamount: 'modularamount',
  siteservicesamount: 'siteservicesamount',
  clientid: 'clientid',
  receivedamount: 'receivedamount',
  paymentrequest: 'paymentrequest',
  additionalcharges: 'additionalcharges',
  siteserviceamount: 'siteserviceamount',
  description: 'description',
  linkid: 'linkid',
  orderid: 'orderid',
  paymentrealizationstatus: 'paymentrealizationstatus',
  appname: 'appname',
  salesforcedbid: 'salesforcedbid',
  odoo_payment_id: 'odoo_payment_id',
  reason_for_rejection: 'reason_for_rejection',
  paymentmillestoneid: 'paymentmillestoneid',
  paymentname: 'paymentname'
});

exports.Prisma.Dc_paymentrequestsScalarFieldEnum = makeEnum({
  id: 'id',
  appname: 'appname',
  requestid: 'requestid',
  requestdate: 'requestdate',
  category: 'category',
  requestamount: 'requestamount',
  description: 'description',
  clientid: 'clientid',
  status: 'status',
  createdat: 'createdat',
  updatedat: 'updatedat',
  paymentid: 'paymentid',
  paymentreceiveddate: 'paymentreceiveddate',
  razorpay_refernce_id: 'razorpay_refernce_id',
  razorpay_payment_id: 'razorpay_payment_id',
  razorpay_short_url: 'razorpay_short_url'
});

exports.Prisma.Dc_project_momScalarFieldEnum = makeEnum({
  id: 'id',
  projectid: 'projectid',
  milestoneid: 'milestoneid',
  designerid: 'designerid',
  meetingname: 'meetingname',
  meetingagenda: 'meetingagenda',
  meetingdescription: 'meetingdescription',
  meetingdate: 'meetingdate',
  status: 'status',
  sentondate: 'sentondate'
});

exports.Prisma.Dc_project_quotesScalarFieldEnum = makeEnum({
  id: 'id',
  quotename: 'quotename',
  modularvalue: 'modularvalue',
  siteservice: 'siteservice',
  modulardiscount: 'modulardiscount',
  modularabsolutediscount: 'modularabsolutediscount',
  siteserviceabsolutediscount: 'siteserviceabsolutediscount',
  siteservicediscount: 'siteservicediscount',
  islatestquote: 'islatestquote',
  modularxml: 'modularxml',
  salesforcequoteid: 'salesforcequoteid',
  opportunityid: 'opportunityid',
  roomlist: 'roomlist',
  proposalpdf: 'proposalpdf',
  modularpdflocation: 'modularpdflocation',
  decorvalue: 'decorvalue',
  siteservicexml: 'siteservicexml',
  siteservicepdflocation: 'siteservicepdflocation',
  addoncostingpdf: 'addoncostingpdf',
  customername: 'customername',
  isimosproject: 'isimosproject',
  rooms_ids: 'rooms_ids'
});

exports.Prisma.Dc_projectsScalarFieldEnum = makeEnum({
  id: 'id',
  projectid: 'projectid',
  projectname: 'projectname',
  projectstatus: 'projectstatus',
  signoffstatus: 'signoffstatus',
  projectvalue: 'projectvalue',
  createdate: 'createdate',
  updatedate: 'updatedate',
  signupdate: 'signupdate',
  customerid: 'customerid',
  designerid: 'designerid',
  salesmanagerid: 'salesmanagerid',
  salesmanagername: 'salesmanagername',
  chmid: 'chmid',
  surveyexecutiveid: 'surveyexecutiveid',
  designstudioid: 'designstudioid',
  modularbaseamount: 'modularbaseamount',
  modularvalue: 'modularvalue',
  modulardiscount: 'modulardiscount',
  siteservicebaseamount: 'siteservicebaseamount',
  siteservicevalue: 'siteservicevalue',
  siteservicediscount: 'siteservicediscount',
  modularpmfee: 'modularpmfee',
  sitepmfee: 'sitepmfee',
  signupamount: 'signupamount',
  signupstate: 'signupstate',
  experiencecenterid: 'experiencecenterid',
  cityid: 'cityid',
  projectaddressid: 'projectaddressid',
  cmmname: 'cmmname',
  expectedhandoverdate: 'expectedhandoverdate',
  currentmilestone: 'currentmilestone',
  projectphase: 'projectphase',
  hasdesigneraccepted: 'hasdesigneraccepted',
  hasdesigerresponded: 'hasdesigerresponded',
  hometype: 'hometype',
  initialsignupvalue: 'initialsignupvalue',
  decorvalue: 'decorvalue',
  addonvalue: 'addonvalue',
  totalprojectvalue: 'totalprojectvalue',
  achievedrevenuevalue: 'achievedrevenuevalue',
  quoteid: 'quoteid',
  projectrating: 'projectrating',
  includepmfee: 'includepmfee',
  milestonetype: 'milestonetype',
  odooid: 'odooid',
  odoo_delivery_address_id: 'odoo_delivery_address_id',
  isnewpaymentproject: 'isnewpaymentproject',
  template: 'template',
  clientid: 'clientid',
  projectdecorvalue: 'projectdecorvalue',
  projectmodularvalue: 'projectmodularvalue',
  projectsiteservicesvalue: 'projectsiteservicesvalue',
  pendingamountvalue: 'pendingamountvalue',
  modularabsolutediscount: 'modularabsolutediscount',
  siteserviceabsolutediscount: 'siteserviceabsolutediscount',
  milestones: 'milestones',
  opportunityid: 'opportunityid',
  paymentrequests: 'paymentrequests',
  siteaddress: 'siteaddress',
  valuebeforediscount: 'valuebeforediscount',
  isimosproject: 'isimosproject',
  iscustomersignoffrequired: 'iscustomersignoffrequired',
  modular_collected_amount: 'modular_collected_amount',
  site_services_collected_amount: 'site_services_collected_amount',
  imosrooms: 'imosrooms',
  haslift: 'haslift',
  hasfalseceiling: 'hasfalseceiling',
  scopeforelectricalwork: 'scopeforelectricalwork',
  projecttype: 'projecttype',
  tentativeprojectdurationaftersignoff: 'tentativeprojectdurationaftersignoff',
  scopeofwork: 'scopeofwork',
  specialfinishes: 'specialfinishes',
  floorarea: 'floorarea',
  paymentmilestonelist: 'paymentmilestonelist',
  modularamountgst: 'modularamountgst',
  siteservicegst: 'siteservicegst',
  siteserviceamountgst: 'siteserviceamountgst',
  siteservicepdflink: 'siteservicepdflink',
  modularamountgstvalue: 'modularamountgstvalue',
  siteservicediscountvalue: 'siteservicediscountvalue',
  quotelink: 'quotelink',
  proposalpdflink: 'proposalpdflink',
  isimos: 'isimos',
  modularinvoicedamount: 'modularinvoicedamount',
  siteserviceinvoicedamount: 'siteserviceinvoicedamount',
  smartsheetid: 'smartsheetid',
  projectdelay: 'projectdelay',
  projectmanagername: 'projectmanagername',
  projectmanager: 'projectmanager',
  lastupdatedate: 'lastupdatedate'
});

exports.Prisma.Dc_ticketsScalarFieldEnum = makeEnum({
  id: 'id',
  ticketid: 'ticketid',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.Dc_odooinvoiceScalarFieldEnum = makeEnum({
  id: 'id',
  invoicenumber: 'invoicenumber',
  invoiceid: 'invoiceid',
  clientid: 'clientid',
  invoicedate: 'invoicedate',
  invoiceamount: 'invoiceamount',
  invoicepdf: 'invoicepdf',
  milestone: 'milestone',
  category: 'category',
  currentprojectvalue: 'currentprojectvalue',
  currentmodularvalue: 'currentmodularvalue',
  currentsiteservicesvalue: 'currentsiteservicesvalue',
  baseamount: 'baseamount',
  additionalcharge: 'additionalcharge',
  igst: 'igst',
  cgst: 'cgst',
  sgst: 'sgst',
  totaltax: 'totaltax',
  status: 'status',
  createdat: 'createdat',
  updatedat: 'updatedat',
  odooinvoiceid: 'odooinvoiceid',
  project: 'project'
});

exports.Prisma.Dc_paymentmilestoneScalarFieldEnum = makeEnum({
  id: 'id',
  status: 'status',
  totalpayableamount: 'totalpayableamount',
  advanceamount: 'advanceamount',
  amountpaid: 'amountpaid',
  siteserviceamount: 'siteserviceamount',
  amountdue: 'amountdue',
  freezedmodular: 'freezedmodular',
  freezedsiteservice: 'freezedsiteservice',
  isfreezed: 'isfreezed',
  milestonename: 'milestonename',
  modularamount: 'modularamount',
  paymentvalue: 'paymentvalue',
  duedate: 'duedate',
  sequence: 'sequence',
  projectid: 'projectid',
  createdat: 'createdat',
  updatedat: 'updatedat',
  invoicebaseamount: 'invoicebaseamount',
  invoicedate: 'invoicedate',
  invoicenumber: 'invoicenumber',
  invoicetotalamount: 'invoicetotalamount',
  invoicetotalcgstaxamount: 'invoicetotalcgstaxamount',
  invoicetotaligsttaxamount: 'invoicetotaligsttaxamount',
  invoicetotalsgsttaxamount: 'invoicetotalsgsttaxamount',
  invoicetotaltaxamount: 'invoicetotaltaxamount',
  addonamount: 'addonamount',
  invoiceurl: 'invoiceurl',
  paymentlink: 'paymentlink',
  milestonesfid: 'milestonesfid',
  paymentlinkid: 'paymentlinkid',
  rpayorderid: 'rpayorderid',
  receiptid: 'receiptid',
  paymentid: 'paymentid'
});

exports.Prisma.Dc_esignoffsScalarFieldEnum = makeEnum({
  id: 'id',
  signoffstatus: 'signoffstatus',
  customerfeedback: 'customerfeedback',
  displayname: 'displayname',
  filename: 'filename',
  projectphasestatus: 'projectphasestatus',
  projectid: 'projectid',
  customerid: 'customerid',
  createdat: 'createdat',
  updatedat: 'updatedat',
  awsfilekey: 'awsfilekey',
  customersigneddocument: 'customersigneddocument',
  feedbackdescription: 'feedbackdescription',
  fileurl: 'fileurl',
  uploadedby: 'uploadedby',
  uploadedtimestamp: 'uploadedtimestamp',
  reviewedtimestamp: 'reviewedtimestamp',
  rejectedbecause: 'rejectedbecause',
  name: 'name',
  key: 'key',
  location: 'location',
  uploadeddate: 'uploadeddate',
  accepteddate: 'accepteddate',
  rejecteddate: 'rejecteddate',
  isnewproject: 'isnewproject'
});

exports.Prisma.Dc_invoicesScalarFieldEnum = makeEnum({
  id: 'id',
  reciepts: 'reciepts',
  invoicenumber: 'invoicenumber',
  paymentname: 'paymentname',
  paymentstatus: 'paymentstatus',
  date: 'date',
  experiencecenter: 'experiencecenter',
  milestonependingdue: 'milestonependingdue',
  amount: 'amount',
  amountpaid: 'amountpaid',
  amountdue: 'amountdue',
  invoicepdf: 'invoicepdf',
  paymentlinkid: 'paymentlinkid',
  paymentlink: 'paymentlink',
  receiptid: 'receiptid',
  createdat: 'createdat',
  updatedat: 'updatedat',
  rpayorderid: 'rpayorderid',
  paymentreceipts: 'paymentreceipts',
  issalesforcemigrateddata: 'issalesforcemigrateddata',
  extrapayments: 'extrapayments',
  project: 'project',
  advanceamount: 'advanceamount',
  projectid: 'projectid',
  isregenerated: 'isregenerated',
  projectmodularvalue: 'projectmodularvalue',
  projectsiteservicesvalue: 'projectsiteservicesvalue',
  projectdecorvalue: 'projectdecorvalue',
  invalidatedafterregenerate: 'invalidatedafterregenerate',
  studioname: 'studioname',
  invoiceid: 'invoiceid',
  requeststatus: 'requeststatus',
  invoiceamount: 'invoiceamount',
  milestone: 'milestone',
  category: 'category',
  projectstatus: 'projectstatus',
  projectvalue: 'projectvalue',
  salesforcedbid: 'salesforcedbid',
  inv_created_date: 'inv_created_date'
});

exports.Prisma.Dc_receiptnumbersScalarFieldEnum = makeEnum({
  id: 'id',
  experiencecentercode: 'experiencecentercode',
  year: 'year',
  month: 'month',
  sequencenumber: 'sequencenumber',
  createdat: 'createdat',
  updatedat: 'updatedat'
});

exports.Prisma.Dc_companiesScalarFieldEnum = makeEnum({
  id: 'id',
  legalname: 'legalname',
  companycode: 'companycode',
  companycodename: 'companycodename',
  gstin: 'gstin',
  cin: 'cin',
  registeredaddress: 'registeredaddress',
  createdat: 'createdat',
  updatedat: 'updatedat'
});

exports.Prisma.Dc_invoicepdfhtmlsScalarFieldEnum = makeEnum({
  id: 'id',
  invoicenumber: 'invoicenumber',
  createdat: 'createdat',
  invoicepdfhtml: 'invoicepdfhtml',
  updatedat: 'updatedat'
});

exports.Prisma.Dc_roundrobinScalarFieldEnum = makeEnum({
  roundrobinid: 'roundrobinid',
  teamid: 'teamid',
  experiencecenterid: 'experiencecenterid'
});

exports.Prisma.Dc_surveyroundrobinScalarFieldEnum = makeEnum({
  roundrobinid: 'roundrobinid',
  surveyexecutiveid: 'surveyexecutiveid',
  experiencecenterid: 'experiencecenterid'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.NullableJsonNullValueInput = makeEnum({
  DbNull: 'DbNull',
  JsonNull: 'JsonNull'
});

exports.Prisma.QueryMode = makeEnum({
  default: 'default',
  insensitive: 'insensitive'
});

exports.Prisma.JsonNullValueFilter = makeEnum({
  DbNull: 'DbNull',
  JsonNull: 'JsonNull',
  AnyNull: 'AnyNull'
});


exports.Prisma.ModelName = makeEnum({
  dc_cities: 'dc_cities',
  dc_experiencecenters: 'dc_experiencecenters',
  dc_role: 'dc_role',
  dc_department: 'dc_department',
  dc_teams: 'dc_teams',
  dc_profile: 'dc_profile',
  dc_teams_city: 'dc_teams_city',
  dc_teams_experiencecenters: 'dc_teams_experiencecenters',
  dc_login_history: 'dc_login_history',
  dc_users: 'dc_users',
  dc_users_city: 'dc_users_city',
  dc_users_experiencecenters: 'dc_users_experiencecenters',
  dc_users_team: 'dc_users_team',
  dc_addresses: 'dc_addresses',
  dc_customer: 'dc_customer',
  hcmeta: 'hcmeta',
  sf_event_log: 'sf_event_log',
  trigger_log: 'trigger_log',
  trigger_log_archive: 'trigger_log_archive',
  account: 'account',
  Renamedcase: 'Renamedcase',
  casecomment: 'casecomment',
  commission__c: 'commission__c',
  contact: 'contact',
  contentversion: 'contentversion',
  design_user__c: 'design_user__c',
  feedcomment: 'feedcomment',
  invoice__c: 'invoice__c',
  invoice_payment__c: 'invoice_payment__c',
  lead: 'lead',
  milestone1_milestone__c: 'milestone1_milestone__c',
  milestone1_project__c: 'milestone1_project__c',
  opportunity: 'opportunity',
  opportunity_invoice__c: 'opportunity_invoice__c',
  payment__c: 'payment__c',
  quote: 'quote',
  user: 'user',
  dc_requirement_form: 'dc_requirement_form',
  dc_application: 'dc_application',
  dc_attachments: 'dc_attachments',
  dc_change_request: 'dc_change_request',
  dc_mom_comments: 'dc_mom_comments',
  request_payment__c: 'request_payment__c',
  dc_odoocookie: 'dc_odoocookie',
  dc_paymentreceipts: 'dc_paymentreceipts',
  dc_paymentrequests: 'dc_paymentrequests',
  dc_project_mom: 'dc_project_mom',
  dc_project_quotes: 'dc_project_quotes',
  dc_projects: 'dc_projects',
  dc_tickets: 'dc_tickets',
  dc_odooinvoice: 'dc_odooinvoice',
  dc_paymentmilestone: 'dc_paymentmilestone',
  dc_esignoffs: 'dc_esignoffs',
  dc_invoices: 'dc_invoices',
  dc_receiptnumbers: 'dc_receiptnumbers',
  dc_companies: 'dc_companies',
  dc_invoicepdfhtmls: 'dc_invoicepdfhtmls',
  dc_roundrobin: 'dc_roundrobin',
  dc_surveyroundrobin: 'dc_surveyroundrobin'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
